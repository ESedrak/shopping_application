spring.application.name=order-service
server.port=8081

#mySQL
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/order_service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}
spring.jpa.hibernate.ddl-auto=none

#services
services.inventory.url=${SERVICES_INVENTORY_URL}

#openApi
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#actuator endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinence4J Properties
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=10
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5

#Resilinence4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilinence4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2

#Kafka properties
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.template.default-topic=${KAFKA_TOPIC}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Development properties (also used for docker-compose)
spring.config.import=optional:file:.env[.properties]
