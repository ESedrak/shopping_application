name: Qodana
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches:
      - main

jobs:
  qodana-order-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Qodana Scan - Order Service'
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: scan --project-dir backend/order-service

  qodana-product-service:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Qodana
        uses: actions/cache@v2
        with:
          path: /home/runner/work/_temp/qodana/caches
          key: qodana-2024.1-${{ github.ref }}-${{ github.sha }}

      - name: 'Qodana Scan - Product Service'
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: scan --project-dir backend/product-service --config backend/product-service/qodana.yaml --apply fix
          pr-mode: false
          push-fixes: pull-request

  qodana-inventory-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Qodana Scan - Inventory Service'
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: scan --project-dir backend/inventory-service

  qodana-api-gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Qodana Scan - API Gateway'
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: scan --project-dir backend/api-gateway
  qodana-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Qodana Backend'
        uses: JetBrains/qodana-action@v2024.1
        with:
          args: |
            --source-directory,backend,--config,qodana-backend.yaml
          artifact-name: qodana-backend
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_BACKEND }}

  qodana-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Qodana Scan - Frontend'
        uses: JetBrains/qodana-action@v2024.1
        with:
          args: |
            --source-directory,frontend,--config,qodana-frontend.yaml
          artifact-name: qodana-frontend
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_FRONTEND }}